:github_url: https://github.com/pytorch/pytorch


.. _program_listing_file_torch_csrc_api_include_torch_nn_options_loss.h:

Program Listing for File loss.h
===============================

|exhale_lsh| :ref:`Return to documentation for file <file_torch_csrc_api_include_torch_nn_options_loss.h>` (``torch/csrc/api/include/torch/nn/options/loss.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include <torch/arg.h>
   #include <torch/csrc/WindowsTorchApiMacro.h>
   #include <torch/types.h>
   
   namespace torch {
   namespace nn {
   
   struct TORCH_API L1LossOptions {
     L1LossOptions(torch::Reduction::Reduction reduction = torch::Reduction::Mean)
         : reduction_(reduction) {}
   
     TORCH_ARG(torch::Reduction::Reduction, reduction);
   };
   
   // ============================================================================
   
   struct TORCH_API HingeEmbeddingLossOptions {
     TORCH_ARG(double, margin) = 1.0;
     TORCH_ARG(torch::Reduction::Reduction, reduction) = torch::Reduction::Mean;
   };
   
   // ============================================================================
   
   struct TORCH_API MultiMarginLossOptions {
     TORCH_ARG(int64_t, p) = 1;
     TORCH_ARG(double, margin) = 1.0;
     TORCH_ARG(Tensor, weight) = Tensor();
     TORCH_ARG(torch::Reduction::Reduction, reduction) = torch::Reduction::Mean;
   };
   
   // ============================================================================
   
   struct TORCH_API CosineEmbeddingLossOptions {
     TORCH_ARG(double, margin) = 0.0;
     TORCH_ARG(torch::Reduction::Reduction, reduction) = torch::Reduction::Mean;
   };
   
   // ============================================================================
   
   struct TORCH_API MultiLabelSoftMarginLossOptions {
     TORCH_ARG(Tensor, weight) = Tensor();
   
     TORCH_ARG(torch::Reduction::Reduction, reduction) = torch::Reduction::Mean;
   };
   
   // ============================================================================
   
   struct TORCH_API TripletMarginLossOptions {
     TORCH_ARG(double, margin) = 1.0;
     TORCH_ARG(double, p) = 2.0;
     TORCH_ARG(double, eps) = 1e-6;
     TORCH_ARG(bool, swap) = false;
     TORCH_ARG(torch::Reduction::Reduction, reduction) = torch::Reduction::Mean;
   };
   
   } // namespace nn
   } // namespace torch
