:github_url: https://github.com/pytorch/pytorch


.. _program_listing_file_torch_csrc_api_include_torch_nn_options_linear.h:

Program Listing for File linear.h
=================================

|exhale_lsh| :ref:`Return to documentation for file <file_torch_csrc_api_include_torch_nn_options_linear.h>` (``torch/csrc/api/include/torch/nn/options/linear.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include <torch/arg.h>
   #include <torch/csrc/WindowsTorchApiMacro.h>
   #include <torch/types.h>
   
   namespace torch {
   namespace nn {
   
   struct TORCH_API LinearOptions {
     LinearOptions(int64_t in_features, int64_t out_features);
     TORCH_ARG(int64_t, in_features);
   
     TORCH_ARG(int64_t, out_features);
   
     TORCH_ARG(bool, bias) = true;
   };
   
   // ============================================================================
   
   struct TORCH_API FlattenOptions {
     TORCH_ARG(int64_t, start_dim) = 1;
     TORCH_ARG(int64_t, end_dim) = -1;
   };
   
   // ============================================================================
   
   struct TORCH_API BilinearOptions {
     BilinearOptions(int64_t in1_features, int64_t in2_features, int64_t out_features);
     TORCH_ARG(int64_t, in1_features);
     TORCH_ARG(int64_t, in2_features);
     TORCH_ARG(int64_t, out_features);
     TORCH_ARG(bool, bias) = true;
   };
   
   } // namespace nn
   } // namespace torch
