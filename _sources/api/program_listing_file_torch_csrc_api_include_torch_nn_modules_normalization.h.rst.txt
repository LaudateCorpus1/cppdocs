:github_url: https://github.com/pytorch/pytorch


.. _program_listing_file_torch_csrc_api_include_torch_nn_modules_normalization.h:

Program Listing for File normalization.h
========================================

|exhale_lsh| :ref:`Return to documentation for file <file_torch_csrc_api_include_torch_nn_modules_normalization.h>` (``torch/csrc/api/include/torch/nn/modules/normalization.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include <torch/nn/cloneable.h>
   #include <torch/nn/cloneable.h>
   #include <torch/nn/functional/normalization.h>
   #include <torch/nn/options/normalization.h>
   #include <torch/nn/pimpl.h>
   #include <torch/types.h>
   
   #include <cstddef>
   #include <vector>
   
   namespace torch {
   namespace nn {
   
   class TORCH_API LayerNormImpl : public torch::nn::Cloneable<LayerNormImpl> {
    public:
     explicit LayerNormImpl(std::vector<int64_t> normalized_shape)
         : LayerNormImpl(LayerNormOptions(normalized_shape)) {}
     explicit LayerNormImpl(const LayerNormOptions& options_);
   
     void reset() override;
   
     void pretty_print(std::ostream& stream) const override;
   
     Tensor forward(const Tensor& input);
   
     LayerNormOptions options;
   
     Tensor weight;
   
     Tensor bias;
   };
   
   TORCH_MODULE(LayerNorm);
   
   } // namespace nn
   } // namespace torch
