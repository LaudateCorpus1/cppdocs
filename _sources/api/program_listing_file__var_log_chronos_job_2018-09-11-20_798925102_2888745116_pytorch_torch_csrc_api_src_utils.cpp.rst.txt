:github_url: https://github.com/pytorch/pytorch


.. _program_listing_file__var_log_chronos_job_2018-09-11-20_798925102_2888745116_pytorch_torch_csrc_api_src_utils.cpp:

Program Listing for File utils.cpp
==================================

- Return to documentation for :ref:`file__var_log_chronos_job_2018-09-11-20_798925102_2888745116_pytorch_torch_csrc_api_src_utils.cpp`

.. code-block:: cpp

   #include <torch/utils.h>
   
   #include <ATen/Context.h>
   
   #include <cstddef>
   
   namespace torch {
   void manual_seed(uint64_t seed) {
     // TODO: Move this to at::Context
     at::globalContext().defaultGenerator(at::kCPU).manualSeed(seed);
     // NB: Sometimes we build with CUDA, but we don't have any GPUs
     // available. In that case, we must not seed CUDA; it will fail!
     if (at::globalContext().hasCUDA() && at::globalContext().getNumGPUs() > 0) {
       at::globalContext().defaultGenerator(at::kCUDA).manualSeedAll(seed);
     }
   }
   } // namespace torch
