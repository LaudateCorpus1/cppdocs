:github_url: https://github.com/pytorch/pytorch


.. _program_listing_file_torch_csrc_api_include_torch_nn_modules_loss.h:

Program Listing for File loss.h
===============================

|exhale_lsh| :ref:`Return to documentation for file <file_torch_csrc_api_include_torch_nn_modules_loss.h>` (``torch/csrc/api/include/torch/nn/modules/loss.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include <torch/expanding_array.h>
   #include <torch/nn/cloneable.h>
   #include <torch/nn/functional/loss.h>
   #include <torch/nn/options/loss.h>
   #include <torch/nn/pimpl.h>
   #include <torch/types.h>
   
   #include <torch/csrc/WindowsTorchApiMacro.h>
   
   #include <cstddef>
   #include <vector>
   
   namespace torch {
   namespace nn {
   
   struct TORCH_API L1LossImpl : Module {
     explicit L1LossImpl(const L1LossOptions& options_ = {});
   
     void pretty_print(std::ostream& stream) const override;
   
     Tensor forward(const Tensor& input, const Tensor& target);
   
     L1LossOptions options;
   };
   
   TORCH_MODULE(L1Loss);
   
   // ============================================================================
   
   struct TORCH_API HingeEmbeddingLossImpl : Module {
     explicit HingeEmbeddingLossImpl(
         const HingeEmbeddingLossOptions& options_ = {});
   
     void pretty_print(std::ostream& stream) const override;
   
     Tensor forward(const Tensor& input, const Tensor& target);
   
     HingeEmbeddingLossOptions options;
   };
   
   TORCH_MODULE(HingeEmbeddingLoss);
   
   // ============================================================================
   
   struct TORCH_API MultiMarginLossImpl : Module {
     explicit MultiMarginLossImpl(
         const MultiMarginLossOptions& options_ = {});
   
     void reset();
   
     void pretty_print(std::ostream& stream) const override;
   
     Tensor forward(const Tensor& input, const Tensor& target);
   
     MultiMarginLossOptions options;
   };
   
   TORCH_MODULE(MultiMarginLoss);
   
   // ============================================================================
   
   struct TORCH_API CosineEmbeddingLossImpl : Module {
     explicit CosineEmbeddingLossImpl(
         const CosineEmbeddingLossOptions& options_ = {});
   
     void pretty_print(std::ostream& stream) const override;
   
     Tensor forward(
         const Tensor& input1,
         const Tensor& input2,
         const Tensor& target);
   
     CosineEmbeddingLossOptions options;
   };
   
   TORCH_MODULE(CosineEmbeddingLoss);
   
   } // namespace nn
   } // namespace torch
