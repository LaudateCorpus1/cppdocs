:github_url: https://github.com/pytorch/pytorch


.. _program_listing_file_torch_csrc_api_include_torch_nn_modules_activation.h:

Program Listing for File activation.h
=====================================

|exhale_lsh| :ref:`Return to documentation for file <file_torch_csrc_api_include_torch_nn_modules_activation.h>` (``torch/csrc/api/include/torch/nn/modules/activation.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include <torch/nn/cloneable.h>
   #include <torch/nn/options/activation.h>
   #include <torch/nn/functional/activation.h>
   
   #include <torch/csrc/WindowsTorchApiMacro.h>
   
   namespace torch {
   namespace nn {
   
   // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ELU ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   
   class TORCH_API ELUImpl : public torch::nn::Cloneable<ELUImpl> {
    public:
     ELUImpl() : ELUImpl(ELUOptions()) {}
     explicit ELUImpl(const ELUOptions& options_);
   
     Tensor forward(Tensor& input);
   
     void reset() override;
   
     void pretty_print(std::ostream& stream) const override;
   
     ELUOptions options;
   };
   
   TORCH_MODULE(ELU);
   
   // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Hardshrink ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   
   class TORCH_API HardshrinkImpl : public torch::nn::Cloneable<HardshrinkImpl> {
    public:
     HardshrinkImpl() : HardshrinkImpl(HardshrinkOptions()) {}
     explicit HardshrinkImpl(const HardshrinkOptions& options_);
   
     Tensor forward(const Tensor& input);
   
     void reset() override;
   
     void pretty_print(std::ostream& stream) const override;
   
     HardshrinkOptions options;
   };
   
   TORCH_MODULE(Hardshrink);
   
   // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Hardtanh ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   
   class TORCH_API HardtanhImpl : public torch::nn::Cloneable<HardtanhImpl> {
    public:
     HardtanhImpl() : HardtanhImpl(HardtanhOptions()) {}
     explicit HardtanhImpl(const HardtanhOptions& options_);
   
     Tensor forward(Tensor& input);
   
     void reset() override;
   
     void pretty_print(std::ostream& stream) const override;
   
     HardtanhOptions options;
   };
   
   TORCH_MODULE(Hardtanh);
   
   } // namespace nn
   } // namespace torch
